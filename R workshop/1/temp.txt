a=1; b=2 # briefly scalers
a+b
a/b
a-b
a*b
c(100,150,130,145,120,160) #create vector
sales_2019_firsthalf<-c(100,150,130,145,120,160) # save the vector as a name

sales_2019_firsthalf<-c(Jan=100,Feb=150,Mar=130,Apr=145,May=120,June=160) # save the vector as a name

sum(sales_2019_firsthalf)

sales_2019_secondhalf = c(July = 150, Aug=200, Sep=250, Oct=160, Nov=110, Dec=220)


Total_sales = c(sales_2019_firsthalf,sales_2019_secondhalf )

Total_sales

sum(Total_sales)

#########################################
#########################################install.packages("devtools")

seq(from = 2, to = 11, by = 3)
seq(2,11,3)
tem<-seq(1,15000,3)
tem[100]
##########################

rep(0,10)# repeat 0 10 times

###########################

seq(4,20,by=2)


xSeq <- 1:5
xSeq*2
c(1:5)
1:5*2 
(1:5)*2
1:(5*2)
a=c(1,2)
b=c(2,3)
a+b
a/b
a%*%b


##################################
##################################
?sample
sample(10,5)
sample(10,5,replace=TRUE)
sample(10,replace=TRUE)




s1=sample(10)
s1
s2=sample(10,replace=TRUE)
s2
s3=sample(c(1,0),10,replace=TRUE)# toss a coin
s3

s1[1] #indexing
s1[1:5]
s3==1
s2_1=which(1==s3)
s2_1
s3[s2_1]

s2_max=which.max(s2)
s2_max
s2[s2_max]
###############################
###############################


x1<-100
is.numeric(x1)
is.logical(x1)
is.character(x1)
x_logic1 <-(x1==1) 
x_logic100 <- (x1==100)
is.logical(x_logic1)
x_char=c("Arizona","state","university")
is.character(x_char)
x_list=list(x1,x_char)
x_list

x=c(1,2,3)
xx <-c(1,2,3)
x
xx
(xx==x)
is.vector(x)
is.matrix(xx)
is.matrix(x)

dim(xx)
length(xx)
y<-c(4,5,6)
z<-c(7,8,9)
A<-cbind(x,y,z)
A
dim(A)
is.matrix(A)

X<-as.matrix(x)
X
dim(X)

rnorm(9,0,1)

B=matrix(rnorm(9,0,1),3,3)
B

A[1,] # find 1st row of matrix A
A[,1] # find 1st col of matrix A
A[,1:2]
CAB=cbind(A,B)
colnames(CAB)<-c("x","y","z","a","b","c")
CAB
RAB=rbind(A,B)
RAB
CAB[1,]


##################################################
##################################################
A
B
A+B
A*B
A%*%B
solve(B)
B%*%solve(B)

my.arry1 <- array(1:24, dim=c(3,4,2))
my.arry2 <- array(1:48, dim=c(3,4,2,2))
mat1 <- matrix(1:9,3,3)
mat2<-matrix(10:18,3,3)
my.arry1
my.arry2
mat1
mat2

z<-array(c(mat1,mat2),dim=c(3,3,2))
z
library(abind)
newarray <- abind(mat1,mat2,along=3)#1 append row, 2 append column,3 append new matrix
newarray

x7=1:10
x7

for (i in 1:10){
x7[i]=x7[i]+1
}#
x7

x8=0
for (i in 1:10){
x8=x8+i
}# 
x8

###################################
x<- runif(1,min=-1,max=1)# draw a random number from random uniform distribution
print(x)#????????????
if(x>0){
print("youwin!")
}else{
print("you lose")}

#?sample
pock=0
tempp=sample(c(0,1), 100, replace = TRUE, prob = c(0.8,0.2))
for (i in 1:100){
if (tempp[i]==1){ pock=pock+1000
}else{
pock = pock-300
}}
pock/100
##################


saver=rep(0,100)

for (i in 1:100){
x=sample(c(1,0),1,prob=c(0.2,0.8))
if(x==1){
saver[i]=1000
}else{
saver[i]=-300
}
}
saver
mean(saver)


####################################
x9<-list(a=1:5, b=rnorm(10))
x9
lapply(x9,mean) ## lapply

x10<-1:4
x10
lapply(x10,runif)

x11 <-matrix(rnorm(200),20,10)
x11
apply(x11,2,mean)#2nd dimension column
apply(x11,1,mean)# 1st dimension row

system.time()
x12<-matrix(rnorm(2000000),200000,10)
n1 <-dim(x12)[1]
rowmean=rep(0,n1)
system.time(
for (i in 1:n1){rowmean[i]=mean(x12[i,])})

system.time(apply(x12,1,mean))

summing=function(x){
for (i in 1:10){
x=x+i
}
print(x)
}

summing(0)


f.sum <-function(x,y){
r <-x+y
r}

f.sum(5,10)

setwd("D:/MSBA-term 2/R workshop/1")
source("summing.R")
summing(0)

##################################
#car_discount=source("Car_discount_rate.csv")
library(gdata)                   # load gdata package 
#help(read.xls)                   # documentation 
discount = read.csv("Car_discount_rate.csv")  # read from first sheet
discount["Discount_Rate"]
c(discount)
carprice=read.csv("carprice_1.csv")

n=dim(carprice)[1]
discounted_price=rep(0,n)
for (i in 1:n){
#l=which(discount[,1]==carprice[i,2])
l=which(carprice[i,2]==discount[,1])
d_r=discount[l,2]
discounted_price[i]=carprice[i,3]*(1-d_r)
}

discounted_price[60]


discounted_price

###############################################
setwd("D:/MSBA-term 2/R workshop")
R_data <-read.csv("Prof_Salaries.csv")
dim(R_data)
summary(R_data)
str(R_data)
head(R_data)
R_data[1,] #first row
tail(R_data) #first 5 rows
write.csv(R_data,"R_data_1.csv")


R_data <-read.csv("Restaurant.csv")


R_data_HourCaloes<-R_data[,c(5,12)] 
R_data_HourCaloes # include
R_data_notHourCalories<- R_data[,-c(5,12)]
R_data_notHourCalories # exclude
R_data$ID
R_data[Hour]
attach(R_data)
head(R_data[Hour])
head(R_data["Hour"])
#rm(list=ls(all=TRUE))# remove all data
R_data
R_data_HourCaloes<-R_data[,c(5,12)] 
R_data_HourCaloes

which(R_data$Price>=7)
data_p7 <-R_data[which(R_data$Price>=7),]
dim(data_p7)
mm <-which(R_data$Price>=7)
data_p7p<-R_data[mm,]
dim(data_p7p)

tem = which(R_data$Calories<=400)
mean(R_data$Price[tem])

#########################################################################################

library("dplyr")
library(dplyr)
# subset with hour and colories
R_data_HourCalories <-R_data %>% select(Hour, Calories)

tail(R_data_HourCalories)
head(R_data_HourCalories)

R_dataP <-read.csv("Prof_Salaries.csv")
head(R_dataP)
R_temp=filter(R_dataP, between(R_dataP$yrs.since.phd,10,20))

R_dataP %>% group_by(sex,discipline) %>% count()

R_dataP %>% 
	filter(between(yrs.since.phd,10,20)) %>% 
	summarise(mean(sex=="Male"))

df %>% group_by(month) %>% 
       mutate(per=paste0(round(count/sum(count)*100, 2), "%")) %>% 
       ungroup


R_dataM <-read.csv("Prof_Salaries_missing.csv", head=TRUE)
head(R_dataM)
which(is.na(R_dataM[,7]))
library(mice)
md.pattern(R_dataM)

imputed_Data <- mice(R_dataM, m=5, method ='pmm',seed =500)
imputed_Data_Prof <-data.frame(complete(imputed_Data,1))
dim(imputed_Data_Prof)
md.pattern(imputed_Data_Prof)

n=dim(imputed_Data_Prof)[1]
n

service_level = rep(0,n)
service_median = quantile(imputed_Data_Prof[,5],probs=0.5)
mm=which(imputed_Data_Prof[,5]<=service_median)
service_level[mm]=0
service_level[-mm]=1
Data_prof1<-cbind(imputed_Data_Prof, service_level)
Data_prof1[,c(7,8)]
#####################


Pr1=sample(c(1,0),100000,replace=TRUE)
mean(Pr1)


############################################
ProfSalary = read.csv("Prof_Salaries.csv")
dim(ProfSalary)

ProfSalary[1,]
summary(ProfSalary)

pnorm(0) #????????????????
(1-pnorm(1.96))*2

qnorm(0.5)#???? ????? (?tail)

###############################################

# sample from poisssion distribution use 1 sample size and use 30 sample size

NS= 1000
NX=30 # try 1 10 30
CLT_s=rep(0,NS)
for (i in 1:NS){
CLT_s[i]=mean(rpois(NX,lambda=5))
}

hist(CLT_s)























